'''
Created on Aug 26, 2019

@author: USOMZIA
Input: graph = [
  [1,0,1],
  [1,1,0],
  [0,1,1]
]
Output: -1
Explanation: There is no celebrity.
'''
# The knows API is already defined for you.
# @param a, person a
# @param b, person b
# @return a boolean, whether a knows b
# def knows(a, b):

class Solution(object):
    def findCelebrity_general(self, n):
        def knows(row, col):
            g = [[1,0,1,1,1,0,0,1,0,1,1,0,1,0,1,0,0,0,0,1,1,0,1,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,1],[0,1,1,0,1,0,0,1,0,0,1,0,1,1,0,1,0,0,1,1,0,1,1,0,1,0,0,0,0,1,0,0,0,0,1,0,1,0,0],[0,1,1,1,0,1,0,1,1,1,1,0,1,1,1,0,1,0,1,1,1,1,0,0,1,1,1,1,0,0,0,0,1,0,0,1,1,0,0],[0,1,0,1,1,1,1,1,0,1,1,1,1,1,0,0,0,0,0,1,1,0,1,0,0,0,0,0,0,1,1,1,0,1,1,0,0,0,0],[0,0,0,1,1,1,0,1,0,0,0,1,0,0,1,1,1,0,0,1,0,1,0,0,0,1,0,0,0,1,1,0,0,1,0,1,0,1,0],[0,1,0,0,1,1,1,1,1,1,1,0,0,1,1,0,0,1,1,1,1,0,0,1,0,0,1,0,1,1,1,1,0,0,1,0,1,0,0],[0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,0,1,0,1,0,0,0,0,0,0,1,1,0,1,0,0,1,1],[0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[1,1,1,1,1,0,1,1,1,0,0,0,0,0,1,0,1,1,0,1,1,1,1,0,1,1,1,0,0,0,0,0,0,0,0,0,1,0,1],[1,1,1,0,0,1,1,1,1,1,1,0,0,1,1,1,1,0,1,1,1,1,1,0,1,1,1,0,0,0,1,1,1,1,1,1,0,0,1],[0,0,1,1,0,1,0,1,0,1,1,0,0,0,1,0,0,1,1,1,1,1,0,1,1,0,1,1,1,1,0,1,1,1,0,1,1,0,0],[1,0,1,1,1,1,0,1,0,1,0,1,0,0,1,0,0,0,1,1,0,1,1,0,0,0,1,1,0,1,1,1,1,0,1,1,0,1,1],[1,1,1,0,1,0,1,1,1,0,0,1,1,0,1,0,0,1,1,0,1,0,1,0,1,1,1,1,0,1,1,1,0,0,1,1,1,1,0],[0,1,0,0,1,1,1,1,1,0,1,1,0,1,0,1,1,1,0,0,1,0,0,1,0,1,1,1,1,0,1,1,1,0,0,0,1,0,0],[0,1,0,1,0,1,0,1,1,0,0,1,0,0,1,1,0,0,0,0,1,0,0,1,1,0,0,0,0,0,0,1,0,1,1,1,1,1,1],[0,0,0,0,1,1,0,1,0,1,0,1,1,0,0,1,1,1,1,1,1,0,0,1,0,0,1,1,1,0,1,0,1,1,0,1,1,0,1],[1,0,0,1,1,0,0,1,1,1,1,0,1,1,1,1,1,1,0,1,1,1,1,0,0,0,1,1,1,1,1,1,1,0,1,0,0,1,1],[1,0,0,0,0,1,1,1,1,0,0,1,1,0,0,1,0,1,1,0,1,0,1,1,0,1,0,0,0,1,1,1,1,1,0,0,0,0,0],[0,0,1,1,0,1,1,1,1,0,1,0,0,0,1,1,1,1,1,0,0,1,0,0,0,1,1,0,0,0,1,0,0,1,0,1,1,1,0],[0,0,0,0,0,0,0,1,0,1,0,1,1,0,0,1,0,1,0,1,0,0,1,0,0,1,1,1,0,1,1,0,1,0,1,1,0,1,1],[1,1,0,0,1,0,0,1,1,0,1,1,0,1,0,1,0,0,0,1,1,1,1,1,0,0,0,1,1,1,0,0,0,1,1,1,1,0,1],[1,1,0,0,1,1,0,1,0,1,0,1,1,1,1,0,1,0,1,0,0,1,1,1,0,1,1,1,0,1,1,0,0,1,1,1,1,1,0],[0,0,1,1,1,0,1,1,1,0,0,1,1,1,0,0,0,0,1,1,0,0,1,1,1,0,1,0,1,0,1,1,1,0,0,0,1,0,0],[1,0,0,1,1,0,1,1,1,1,0,1,0,1,1,0,0,0,1,1,0,0,0,1,1,0,0,0,0,0,0,1,0,1,1,1,1,0,1],[1,1,0,1,0,1,1,1,0,0,0,1,1,1,1,1,1,0,1,0,1,1,1,0,1,1,1,0,0,0,1,0,1,0,1,0,0,1,0],[0,1,0,0,1,1,0,1,1,1,0,0,1,1,0,1,0,1,0,1,1,1,0,0,0,1,0,0,1,1,1,0,0,0,0,1,1,0,0],[0,0,0,1,0,0,1,1,1,0,1,1,1,1,0,0,0,0,1,0,1,1,0,0,0,0,1,0,1,0,0,1,0,0,0,0,1,0,0],[0,1,1,1,1,1,0,1,1,1,1,0,1,0,0,1,0,1,0,1,1,1,1,0,1,1,1,1,1,1,1,0,0,0,0,1,0,0,1],[1,1,1,0,1,1,1,1,0,1,1,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,1,1,0,0,1,1,1,0,1],[0,1,1,0,0,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,0,1,0,0,1,1,1,1,0,0,1,0,0,1,0,0],[0,0,1,0,0,0,1,1,0,1,0,0,0,1,1,1,1,0,1,1,0,1,1,1,0,1,0,1,0,0,1,0,1,1,1,0,0,1,0],[0,0,0,0,1,1,1,1,1,0,1,0,0,0,0,1,1,0,1,0,0,1,0,1,1,0,0,0,0,0,1,1,1,0,1,1,0,1,0],[1,0,0,0,1,1,0,1,0,1,0,1,0,0,1,1,1,1,1,0,1,1,0,1,1,0,1,0,1,1,1,0,1,0,0,0,1,0,0],[1,0,1,0,0,1,0,1,0,0,1,1,0,0,1,1,0,0,1,0,0,1,1,1,1,0,0,0,0,1,1,1,0,1,0,1,0,0,1],[0,0,0,1,0,1,1,1,0,0,1,0,1,0,1,0,1,1,0,0,0,1,0,1,1,0,1,1,1,1,0,1,1,0,1,1,1,1,1],[0,1,0,0,1,0,0,1,1,0,0,0,1,1,0,1,0,1,0,1,1,0,0,0,1,1,0,0,1,0,1,0,1,0,1,1,0,1,1],[0,1,1,0,1,1,1,1,0,1,0,1,0,1,1,0,0,0,1,0,0,0,0,1,0,1,0,0,1,1,0,0,0,0,1,1,1,1,0],[0,1,0,1,1,0,0,1,1,0,1,1,0,0,1,1,1,0,0,1,0,1,0,0,0,0,0,0,1,1,1,0,1,0,1,1,1,1,0],[0,1,1,1,1,0,1,1,1,1,0,0,1,1,0,0,1,1,1,0,0,1,0,0,1,0,1,1,0,1,1,0,1,0,1,1,0,0,1]]
            if g[row][col] == 1:
                return True
            else:
                return False
        """
        :type n: int
        :rtype: int
        """
        graph = [[0 for _  in range(n)] for _ in range(n)]
        for i in range(n):
            for j in range(n):
                if knows(i, j):
                    graph[i][j] = 1
        sum_row = [0 for _ in range(n)]
        for i in range(n):
            sum_temp = 0
            for j in range(n):
                sum_temp += graph[i][j]
            sum_row[i] = sum_temp
        sum_col = [0 for _ in range(n)]
        for j in range(n):
            sum_temp = 0
            for i in range(n):
                sum_temp += graph[i][j]
            sum_col[j] = sum_temp
        for i in range(n):
            if sum_row[i] == 1 and sum_col[i] == n:
                return 1
        return -1
    def findCelebrity(self, n):
        def knows(row, col):
            g = [[1,0,1,1,1,0,0,1,0,1,1,0,1,0,1,0,0,0,0,1,1,0,1,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,1],[0,1,1,0,1,0,0,1,0,0,1,0,1,1,0,1,0,0,1,1,0,1,1,0,1,0,0,0,0,1,0,0,0,0,1,0,1,0,0],[0,1,1,1,0,1,0,1,1,1,1,0,1,1,1,0,1,0,1,1,1,1,0,0,1,1,1,1,0,0,0,0,1,0,0,1,1,0,0],[0,1,0,1,1,1,1,1,0,1,1,1,1,1,0,0,0,0,0,1,1,0,1,0,0,0,0,0,0,1,1,1,0,1,1,0,0,0,0],[0,0,0,1,1,1,0,1,0,0,0,1,0,0,1,1,1,0,0,1,0,1,0,0,0,1,0,0,0,1,1,0,0,1,0,1,0,1,0],[0,1,0,0,1,1,1,1,1,1,1,0,0,1,1,0,0,1,1,1,1,0,0,1,0,0,1,0,1,1,1,1,0,0,1,0,1,0,0],[0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,0,1,0,1,0,0,0,0,0,0,1,1,0,1,0,0,1,1],[0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[1,1,1,1,1,0,1,1,1,0,0,0,0,0,1,0,1,1,0,1,1,1,1,0,1,1,1,0,0,0,0,0,0,0,0,0,1,0,1],[1,1,1,0,0,1,1,1,1,1,1,0,0,1,1,1,1,0,1,1,1,1,1,0,1,1,1,0,0,0,1,1,1,1,1,1,0,0,1],[0,0,1,1,0,1,0,1,0,1,1,0,0,0,1,0,0,1,1,1,1,1,0,1,1,0,1,1,1,1,0,1,1,1,0,1,1,0,0],[1,0,1,1,1,1,0,1,0,1,0,1,0,0,1,0,0,0,1,1,0,1,1,0,0,0,1,1,0,1,1,1,1,0,1,1,0,1,1],[1,1,1,0,1,0,1,1,1,0,0,1,1,0,1,0,0,1,1,0,1,0,1,0,1,1,1,1,0,1,1,1,0,0,1,1,1,1,0],[0,1,0,0,1,1,1,1,1,0,1,1,0,1,0,1,1,1,0,0,1,0,0,1,0,1,1,1,1,0,1,1,1,0,0,0,1,0,0],[0,1,0,1,0,1,0,1,1,0,0,1,0,0,1,1,0,0,0,0,1,0,0,1,1,0,0,0,0,0,0,1,0,1,1,1,1,1,1],[0,0,0,0,1,1,0,1,0,1,0,1,1,0,0,1,1,1,1,1,1,0,0,1,0,0,1,1,1,0,1,0,1,1,0,1,1,0,1],[1,0,0,1,1,0,0,1,1,1,1,0,1,1,1,1,1,1,0,1,1,1,1,0,0,0,1,1,1,1,1,1,1,0,1,0,0,1,1],[1,0,0,0,0,1,1,1,1,0,0,1,1,0,0,1,0,1,1,0,1,0,1,1,0,1,0,0,0,1,1,1,1,1,0,0,0,0,0],[0,0,1,1,0,1,1,1,1,0,1,0,0,0,1,1,1,1,1,0,0,1,0,0,0,1,1,0,0,0,1,0,0,1,0,1,1,1,0],[0,0,0,0,0,0,0,1,0,1,0,1,1,0,0,1,0,1,0,1,0,0,1,0,0,1,1,1,0,1,1,0,1,0,1,1,0,1,1],[1,1,0,0,1,0,0,1,1,0,1,1,0,1,0,1,0,0,0,1,1,1,1,1,0,0,0,1,1,1,0,0,0,1,1,1,1,0,1],[1,1,0,0,1,1,0,1,0,1,0,1,1,1,1,0,1,0,1,0,0,1,1,1,0,1,1,1,0,1,1,0,0,1,1,1,1,1,0],[0,0,1,1,1,0,1,1,1,0,0,1,1,1,0,0,0,0,1,1,0,0,1,1,1,0,1,0,1,0,1,1,1,0,0,0,1,0,0],[1,0,0,1,1,0,1,1,1,1,0,1,0,1,1,0,0,0,1,1,0,0,0,1,1,0,0,0,0,0,0,1,0,1,1,1,1,0,1],[1,1,0,1,0,1,1,1,0,0,0,1,1,1,1,1,1,0,1,0,1,1,1,0,1,1,1,0,0,0,1,0,1,0,1,0,0,1,0],[0,1,0,0,1,1,0,1,1,1,0,0,1,1,0,1,0,1,0,1,1,1,0,0,0,1,0,0,1,1,1,0,0,0,0,1,1,0,0],[0,0,0,1,0,0,1,1,1,0,1,1,1,1,0,0,0,0,1,0,1,1,0,0,0,0,1,0,1,0,0,1,0,0,0,0,1,0,0],[0,1,1,1,1,1,0,1,1,1,1,0,1,0,0,1,0,1,0,1,1,1,1,0,1,1,1,1,1,1,1,0,0,0,0,1,0,0,1],[1,1,1,0,1,1,1,1,0,1,1,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,1,1,0,0,1,1,1,0,1],[0,1,1,0,0,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,0,1,0,0,1,1,1,1,0,0,1,0,0,1,0,0],[0,0,1,0,0,0,1,1,0,1,0,0,0,1,1,1,1,0,1,1,0,1,1,1,0,1,0,1,0,0,1,0,1,1,1,0,0,1,0],[0,0,0,0,1,1,1,1,1,0,1,0,0,0,0,1,1,0,1,0,0,1,0,1,1,0,0,0,0,0,1,1,1,0,1,1,0,1,0],[1,0,0,0,1,1,0,1,0,1,0,1,0,0,1,1,1,1,1,0,1,1,0,1,1,0,1,0,1,1,1,0,1,0,0,0,1,0,0],[1,0,1,0,0,1,0,1,0,0,1,1,0,0,1,1,0,0,1,0,0,1,1,1,1,0,0,0,0,1,1,1,0,1,0,1,0,0,1],[0,0,0,1,0,1,1,1,0,0,1,0,1,0,1,0,1,1,0,0,0,1,0,1,1,0,1,1,1,1,0,1,1,0,1,1,1,1,1],[0,1,0,0,1,0,0,1,1,0,0,0,1,1,0,1,0,1,0,1,1,0,0,0,1,1,0,0,1,0,1,0,1,0,1,1,0,1,1],[0,1,1,0,1,1,1,1,0,1,0,1,0,1,1,0,0,0,1,0,0,0,0,1,0,1,0,0,1,1,0,0,0,0,1,1,1,1,0],[0,1,0,1,1,0,0,1,1,0,1,1,0,0,1,1,1,0,0,1,0,1,0,0,0,0,0,0,1,1,1,0,1,0,1,1,1,1,0],[0,1,1,1,1,0,1,1,1,1,0,0,1,1,0,0,1,1,1,0,0,1,0,0,1,0,1,1,0,1,1,0,1,0,1,1,0,0,1]]
            if g[row][col] == 1:
                return True
            else:
                return False
        # We start from zero and move on. First we check for the numbers greater than the candidate.
        # If there is any that candidate knows that we need to change the candidate to that. After the loop
        # is finished, the only thing that can be celepbrity is the candidate. But we still need to check
        # if the candidate knows the smaller numbers and all the smaller candidate and larger candidates 
        # should know the candidate.
        candidate = 0
        for i in range(1, n):
            if knows(candidate, i):
                candidate = i
        # Now we should check the smaller numbers
        for i in range(candidate):
            if knows(candidate, i) or not(knows(i, candidate)):
                return -1
            # Check for the larger numbers
            for i in range(candidate + 1, n):
                if not knows(i, candidate):
                    return -1
        return candidate
                
        
sol = Solution()
print sol.findCelebrity(3)
        
            
            